#############
###
### THIS IS AN AUTOGENERATED FILE!!! DO NOT EDIT THIS FILE DIRECTLY!!!
###
#############

apiVersion: v1
data:
  config.yaml: |
    plank:
      allow_cancellations: true
      job_url_prefix: "https://prow.pusher.com/view/gcs"
      job_url_template: "https://prow.pusher.com/view/gcs/pusher-ci-cluster-35535/pr-logs/pull/{{.Spec.Refs.Repo}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}"
      report_template: "[Full PR test history](https://prow.pusher.com/pr-history?org={{.Spec.Refs.Org}}&repo={{.Spec.Refs.Repo}}&pr={{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}})"

      default_decoration_config:
        timeout: 7200000000000 # 2h
        grace_period: 15000000000 # 15s
        utility_images:
          clonerefs: "quay.io/pusher/clonerefs:latest"
          initupload: "gcr.io/k8s-prow/initupload:v20190301-2d35634"
          entrypoint: "gcr.io/k8s-prow/entrypoint:v20190301-2d35634"
          sidecar: "gcr.io/k8s-prow/sidecar:v20190301-2d35634"
        gcs_configuration:
          bucket: "pusher-ci-cluster-35535"
          path_strategy: "explicit"
        gcs_credentials_secret: "prow-gcs"

    sinker:
      resync_period: 1h
      max_prowjob_age: 48h
      max_pod_age: 1h

    deck:
      branding:
        logo: "extensions/logo.svg"
        favicon: "extensions/favicon.ico"
        header_color: "#300D4F"
      spyglass:
        size_limit: 500000000
        viewers:
          "started.json|finished.json": ["metadata-viewer"]
          "build-log.txt": ["build-log-viewer"]
          "artifacts/junit.*\\.xml": ["junit-viewer"] # Remember to escape your '\' in yaml strings!

    prowjob_namespace: default
    pod_namespace: default
    log_level: info

    presets:
      - labels:
          preset-quay-credentials: "true"
        volumes:
          - name: credentials
            secret:
              secretName: quay-docker-config
        volumeMounts:
          - name: credentials
            mountPath: /home/prow/.docker
            readOnly: true

      # docker-in-docker (with images/bootstrap) preset
      # NOTE: using this also requires using that image,
      # ensuring you run your test under either the ENTRYPOINT or:
      # /usr/local/bin/runner my-test-command --foo --bar
      # AND setting the following on your PodSpec:
      # securityContext:
      #   privileged: true
      - labels:
          preset-dind-enabled: "true"
        env:
          - name: DOCKER_IN_DOCKER_ENABLED
            value: "true"
        volumes:
          - name: docker-graph
            emptyDir: {}
        volumeMounts:
          - name: docker-graph
            mountPath: /docker-graph
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: config
  namespace: default
