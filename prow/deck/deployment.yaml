apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: deck
  labels:
    app: deck
  annotations:
    wave.pusher.com/update-on-config-change: "true"
spec:
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: deck
  template:
    metadata:
      labels:
        app: deck
    spec:
      serviceAccountName: "deck"
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - deck
              topologyKey: kubernetes.io/hostname
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - deck
              topologyKey: failure-domain.beta.kubernetes.io/zone
      containers:
        - name: deck
          image: gcr.io/k8s-prow/deck:v20190615-f3db6c682
          args:
            - --tide-url=http://tide.default.svc.cluster.local/
            - --hook-url=http://hook.default.svc.cluster.local:8888/plugin-help
            - --job-config-path=/etc/jobs
            - --spyglass=true
            - --gcs-credentials-file=/etc/gcs-credentials/service-account.json
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: jobs
              mountPath: /etc/jobs
              readOnly: true
            - name: extensions
              mountPath: /static/extensions
              readOnly: true
            - name: gcs-credentials
              mountPath: /etc/gcs-credentials
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 3
      volumes:
        - name: config
          configMap:
            name: config
        - name: jobs
          configMap:
            name: jobs
        - name: extensions
          configMap:
            name: extensions
        - name: gcs-credentials
          secret:
            secretName: prow-gcs
