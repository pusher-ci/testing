#############
###
### THIS IS AN AUTOGENERATED FILE!!! DO NOT EDIT THIS FILE DIRECTLY!!!
###
#############

apiVersion: v1
data:
  faros_faros-presubmits.yaml: |
    presubmits:
      pusher/faros:
        - name: pull-faros-verify-generate
          max_concurrency: 10
          path_alias: github.com/pusher/faros
          agent: kubernetes
          always_run: true
          skip_report: false
          decorate: true
          spec:
            containers:
              - image: golang:1.12-stretch
                name: verify-generate
                command: ["/bin/sh", "-c"]
                args:
                  - touch .env && make prepare-env-1.13 && make verify-generate
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
          trigger: "(?m)^/verify generate,?(\\s+|$)"
          rerun_command: "/verify generate"

        - name: pull-faros-verify-manifests
          max_concurrency: 10
          path_alias: github.com/pusher/faros
          agent: kubernetes
          always_run: true
          skip_report: false
          decorate: true
          spec:
            containers:
              - image: golang:1.12-stretch
                name: verify-manifests
                command: ["/bin/sh", "-c"]
                args:
                  - touch .env && make prepare-env-1.13 && make verify-manifests
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
          trigger: "(?m)^/verify manifests,?(\\s+|$)"
          rerun_command: "/verify manifests"

        - name: pull-faros-lint
          max_concurrency: 10
          path_alias: github.com/pusher/faros
          agent: kubernetes
          always_run: true
          skip_report: false
          decorate: true
          spec:
            containers:
              - image: golang:1.12-stretch
                name: lint
                command: ["/bin/sh", "-c"]
                args:
                  - touch .env && make prepare-env-1.13 && make lint
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
          trigger: "(?m)^/lint,?(\\s+|$)"
          rerun_command: "/lint"

        - name: pull-faros-test-ginkgo
          max_concurrency: 10
          path_alias: github.com/pusher/faros
          agent: kubernetes
          always_run: true
          skip_report: false
          decorate: true
          spec:
            containers:
              - image: golang:1.12-stretch
                name: test-ginkgo
                command: ["/bin/sh", "-c"]
                args:
                  - touch .env && make prepare-env-1.13 && make test-ginkgo
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
          trigger: "(?m)^/test ginkgo,?(\\s+|$)"
          rerun_command: "/test ginkgo"

        - name: pull-faros-build-docker
          max_concurrency: 10
          path_alias: github.com/pusher/faros
          agent: kubernetes
          always_run: false
          skip_report: false
          decorate: true
          labels:
            preset-dind-enabled: "true"
          spec:
            containers:
              - image: quay.io/pusher/builder:latest
                name: build-docker
                command: ["/usr/local/bin/runner.sh"]
                args:
                  - TAGS=pull-${PULL_NUMBER},${PULL_PULL_SHA}
                  - PUSH_TAGS=${TAGS}
                  - make docker-build docker-tag docker-push
                resources:
                  requests:
                    cpu: 1
                    memory: 1Gi
                securityContext:
                  privileged: true
          trigger: "(?m)^/build docker,?(\\s+|$)"
          rerun_command: "/build docker"
  testing_testing-presubmits.yaml: |
    presubmits:
      pusher/testing:
      - name: pull-testing-verify-config
        max_concurrency: 10
        path_alias: github.com/pusher/testing
        agent: kubernetes
        always_run: true
        skip_report: false
        decorate: true
        spec:
          containers:
          - image: quay.io/pusher/golang-ci:latest
            name: verify-config
            command: ["/bin/bash", "-c"]
            args:
            - make verify-config
            resources:
              requests:
                cpu: 1
                memory: 1Gi
        trigger: "(?m)^/verify config,?(\\s+|$)"
        rerun_command: "/verify config"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: jobs
  namespace: default
